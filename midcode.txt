const int MAX_NUM = 1024
int factorial()
para_int n
n <= 1
BNZ Label0
ret 1
Label0:
$$6 = n - 1
push $$6
call factorial
$$7 = RET
$$9 = n * $$7
ret $$9
int mod()
para_int x
para_int y
$$13 = x / y
$$15 = $$13 * y
x = x - $$15
ret x
void swap()
para_int x
para_int y
var int temp
printf(" x = ")
printf(x)
printf(" y = ")
printf(y)
temp = x
x = y
y = temp
printf(" SWAP x = ")
printf(x)
printf(" SWAP y = ")
printf(y)
return null
void complete_num()
para_int val
var int b
var int c
var int i
var int j
var int a
var int x2
var int x1
var int m
var int h
var int leap
var int n
var int k2
var int s
int k[128]
j = val
Label1:
j < 1024
BNZ Label2
n = -1
s = j
i = 1
Label3:
i < j
BNZ Label4
$$37 = j / i
x1 = $$37 * i
push j
push i
call mod
$$43 = RET
$$43 == 0
BNZ Label5
n = n + 1
s = s - i
n >= 128
BNZ Label6
printf(" OVERFLOW!          ")
Label6:
n < 128
BNZ Label7
k[n] = i
Label7:
Label5:
i = i + 1
GOTO Label3
Label4:
s == 0
BNZ Label8
printf(" complete number: ")
printf(j)
i = 0
Label9:
i <= n
BNZ Label10
printf("  ")
$$68 = k[i]
printf($$68)
i = i + 1
GOTO Label9
Label10:
printf("          ")
Label8:
j = j + 1
GOTO Label1
Label2:
printf(" ---------------------------------------------------------------          ")
a = 0
i = 0
c = j * n
Label11:
i < 1024
BNZ Label12
b = a * i
a = a * i
$$90 = a + b
a = $$90 + c
i = i + 1
GOTO Label11
Label12:
b = a
i = 0
Label13:
i < 1024
BNZ Label14
b = b + i
i = i + 1
GOTO Label13
Label14:
printf(" b = ")
printf(b)
printf(" ---------------------------------------------------------------          ")
h = 0
leap = 1
m = 2
Label15:
m <= 1024
BNZ Label16
k2 = m / 2
i = 2
Label17:
i <= k2
BNZ Label18
$$120 = m / i
x2 = $$120 * i
push m
push i
call mod
$$126 = RET
$$126 == 0
BNZ Label19
leap = 0
Label19:
i = i + 1
GOTO Label17
Label18:
leap == 1
BNZ Label20
printf(" ")
printf(m)
h = h + 1
$$141 = h / 10
x2 = $$141 * 10
x2 == h
BNZ Label21
printf("          ")
Label21:
Label20:
leap = 1
m = m + 1
GOTO Label15
Label16:
printf("          The total is ")
printf(h)
return null
void main()
var int n
push 10
call factorial
$$153 = RET
n = $$153
printf(" 10! = ")
printf(n)
push 5
push 10
call swap
push 2
call complete_num
