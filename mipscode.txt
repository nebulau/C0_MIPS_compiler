.data
	$str0:.asciiz " x = "
	$str1:.asciiz " y = "
	$str2:.asciiz " SWAP x = "
	$str3:.asciiz " SWAP y = "
	$str4:.asciiz " OVERFLOW!          "
	$str5:.asciiz " complete number: "
	$str6:.asciiz "  "
	$str7:.asciiz "          "
	$str8:.asciiz " ---------------------------------------------------------------          "
	$str9:.asciiz " b = "
	$str10:.asciiz " ---------------------------------------------------------------          "
	$str11:.asciiz " "
	$str12:.asciiz "          "
	$str13:.asciiz "          The total is "
	$str14:.asciiz " 10! = "
.text
	j main
factorial:
#为函数局部变量和临时变量退栈空间
#退栈空间，接着保存s系寄存器和$ra,$fp
	sub $sp, $sp, 52
	sw $s0, 40($sp)
	sw $s1, 36($sp)
	sw $s2, 32($sp)
	sw $ra, 8($sp)
	sw $fp, 4($sp)
#置$fp为被调用者基地址
	add $fp, $sp, 56
	lw $t0, 0($fp)
	li $t1, 1
	bgt $t0, $t1, Label0
	li $v0, 1
	lw $fp, 4($sp)
	lw $ra, 8($sp)
	lw $s0, 40($sp)
	lw $s1, 36($sp)
	lw $s2, 32($sp)
	add $sp, $sp, 56
	jr $ra
Label0:
	lw $t0, 0($fp)
	li $t1, 1
	sub $t0, $t0, $t1
	move $s0, $t0
	move $t0, $s0
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal factorial
	move $s1, $v0
	lw $t0, 0($fp)
	mul $t0, $t0, $s1
	move $s2, $t0
	move $v0, $s2
	lw $fp, 4($sp)
	lw $ra, 8($sp)
	lw $s0, 40($sp)
	lw $s1, 36($sp)
	lw $s2, 32($sp)
	add $sp, $sp, 56
	jr $ra
mod:
#为函数局部变量和临时变量退栈空间
#退栈空间，接着保存s系寄存器和$ra,$fp
	sub $sp, $sp, 48
	sw $s0, 40($sp)
	sw $s1, 36($sp)
	sw $ra, 8($sp)
	sw $fp, 4($sp)
#置$fp为被调用者基地址
	add $fp, $sp, 56
	lw $t0, 0($fp)
	lw $t1, -4($fp)
	div $t0, $t0, $t1
	move $s0, $t0
	lw $t1, -4($fp)
	mul $t0, $s0, $t1
	move $s1, $t0
	lw $t0, 0($fp)
	sub $t0, $t0, $s1
	sw $t0, 0($fp)
	lw $v0, 0($fp)
	lw $fp, 4($sp)
	lw $ra, 8($sp)
	lw $s0, 40($sp)
	lw $s1, 36($sp)
	add $sp, $sp, 56
	jr $ra
swap:
#为函数局部变量和临时变量退栈空间
#退栈空间，接着保存s系寄存器和$ra,$fp
	sub $sp, $sp, 44
	sw $s0, 40($sp)
	sw $ra, 8($sp)
	sw $fp, 4($sp)
#置$fp为被调用者基地址
	add $fp, $sp, 52
#打印字符串
	la $a0, $str0
	li $v0, 4
	syscall
#打印int
	lw $a0, 0($fp)
	li $v0, 1
	syscall
#打印字符串
	la $a0, $str1
	li $v0, 4
	syscall
#打印int
	lw $a0, -4($fp)
	li $v0, 1
	syscall
	lw $t0, 0($fp)
	move $s0, $t0
	lw $t0, -4($fp)
	sw $t0, 0($fp)
	move $t0, $s0
	sw $t0, -4($fp)
#打印字符串
	la $a0, $str2
	li $v0, 4
	syscall
#打印int
	lw $a0, 0($fp)
	li $v0, 1
	syscall
#打印字符串
	la $a0, $str3
	li $v0, 4
	syscall
#打印int
	lw $a0, -4($fp)
	li $v0, 1
	syscall
	lw $fp, 4($sp)
	lw $ra, 8($sp)
	lw $s0, 40($sp)
	add $sp, $sp, 52
	jr $ra
complete_num:
#为函数局部变量和临时变量退栈空间
#退栈空间，接着保存s系寄存器和$ra,$fp
	sub $sp, $sp, 632
	sw $s0, 40($sp)
	sw $s1, 36($sp)
	sw $s2, 32($sp)
	sw $s3, 28($sp)
	sw $s4, 24($sp)
	sw $s5, 20($sp)
	sw $s6, 16($sp)
	sw $s7, 12($sp)
	sw $ra, 8($sp)
	sw $fp, 4($sp)
#置$fp为被调用者基地址
	add $fp, $sp, 636
	lw $t0, 0($fp)
	move $s3, $t0
Label1:
	move $t0, $s3
	li $t1, 1024
	bge $t0, $t1, Label2
	li $t0, -1
	sw $t0, -44($fp)
	move $t0, $s3
	sw $t0, -52($fp)
	li $t0, 1
	move $s2, $t0
Label3:
	move $t0, $s2
	move $t1, $s3
	bge $t0, $t1, Label4
	div $t0, $s3, $s2
	sw $t0, -568($fp)
	lw $t0, -568($fp)
	mul $t0, $t0, $s2
	move $s6, $t0
	move $t0, $s3
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	move $t0, $s2
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal mod
	sw $v0, -572($fp)
	lw $t0, -572($fp)
	li $t1, 0
	bne $t0, $t1, Label5
	lw $t0, -44($fp)
	li $t1, 1
	addu $t0, $t0, $t1
	sw $t0, -44($fp)
	lw $t0, -52($fp)
	sub $t0, $t0, $s2
	sw $t0, -52($fp)
	lw $t0, -44($fp)
	li $t1, 128
	blt $t0, $t1, Label6
#打印字符串
	la $a0, $str4
	li $v0, 4
	syscall
Label6:
	lw $t0, -44($fp)
	li $t1, 128
	bge $t0, $t1, Label7
	la $t0, -56($fp)
	lw $t1, -44($fp)
	li $t2, 4
	mul $t1, $t1, $t2
	move $t2, $s2
	sub $t0, $t0, $t1
	sw $t2, 0($t0)
Label7:
Label5:
	li $t1, 1
	addu $t0, $s2, $t1
	move $s2, $t0
	j Label3
Label4:
	lw $t0, -52($fp)
	li $t1, 0
	bne $t0, $t1, Label8
#打印字符串
	la $a0, $str5
	li $v0, 4
	syscall
#打印int
	move $a0, $s3
	li $v0, 1
	syscall
	li $t0, 0
	move $s2, $t0
Label9:
	move $t0, $s2
	lw $t1, -44($fp)
	bgt $t0, $t1, Label10
#打印字符串
	la $a0, $str6
	li $v0, 4
	syscall
	la $t0, -56($fp)
	move $t1, $s2
	li $t2, 4
	mul $t1, $t1, $t2
	sub $t0, $t0, $t1
	lw $t2, 0($t0)
	sw $t2, -576($fp)
#打印int
	lw $a0, -576($fp)
	li $v0, 1
	syscall
	li $t1, 1
	addu $t0, $s2, $t1
	move $s2, $t0
	j Label9
Label10:
#打印字符串
	la $a0, $str7
	li $v0, 4
	syscall
Label8:
	li $t1, 1
	addu $t0, $s3, $t1
	move $s3, $t0
	j Label1
Label2:
#打印字符串
	la $a0, $str8
	li $v0, 4
	syscall
	li $t0, 0
	move $s4, $t0
	li $t0, 0
	move $s2, $t0
	lw $t1, -44($fp)
	mul $t0, $s3, $t1
	move $s1, $t0
Label11:
	move $t0, $s2
	li $t1, 1024
	bge $t0, $t1, Label12
	mul $t0, $s4, $s2
	move $s0, $t0
	mul $t0, $s4, $s2
	move $s4, $t0
	addu $t0, $s4, $s0
	sw $t0, -580($fp)
	lw $t0, -580($fp)
	addu $t0, $t0, $s1
	move $s4, $t0
	li $t1, 1
	addu $t0, $s2, $t1
	move $s2, $t0
	j Label11
Label12:
	move $t0, $s4
	move $s0, $t0
	li $t0, 0
	move $s2, $t0
Label13:
	move $t0, $s2
	li $t1, 1024
	bge $t0, $t1, Label14
	addu $t0, $s0, $s2
	move $s0, $t0
	li $t1, 1
	addu $t0, $s2, $t1
	move $s2, $t0
	j Label13
Label14:
#打印字符串
	la $a0, $str9
	li $v0, 4
	syscall
#打印int
	move $a0, $s0
	li $v0, 1
	syscall
#打印字符串
	la $a0, $str10
	li $v0, 4
	syscall
	li $t0, 0
	sw $t0, -36($fp)
	li $t0, 1
	sw $t0, -40($fp)
	li $t0, 2
	move $s7, $t0
Label15:
	move $t0, $s7
	li $t1, 1024
	bgt $t0, $t1, Label16
	li $t1, 2
	div $t0, $s7, $t1
	sw $t0, -48($fp)
	li $t0, 2
	move $s2, $t0
Label17:
	move $t0, $s2
	lw $t1, -48($fp)
	bgt $t0, $t1, Label18
	div $t0, $s7, $s2
	sw $t0, -584($fp)
	lw $t0, -584($fp)
	mul $t0, $t0, $s2
	move $s5, $t0
	move $t0, $s7
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	move $t0, $s2
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal mod
	sw $v0, -588($fp)
	lw $t0, -588($fp)
	li $t1, 0
	bne $t0, $t1, Label19
	li $t0, 0
	sw $t0, -40($fp)
Label19:
	li $t1, 1
	addu $t0, $s2, $t1
	move $s2, $t0
	j Label17
Label18:
	lw $t0, -40($fp)
	li $t1, 1
	bne $t0, $t1, Label20
#打印字符串
	la $a0, $str11
	li $v0, 4
	syscall
#打印int
	move $a0, $s7
	li $v0, 1
	syscall
	lw $t0, -36($fp)
	li $t1, 1
	addu $t0, $t0, $t1
	sw $t0, -36($fp)
	lw $t0, -36($fp)
	li $t1, 10
	div $t0, $t0, $t1
	sw $t0, -592($fp)
	lw $t0, -592($fp)
	li $t1, 10
	mul $t0, $t0, $t1
	move $s5, $t0
	move $t0, $s5
	lw $t1, -36($fp)
	bne $t0, $t1, Label21
#打印字符串
	la $a0, $str12
	li $v0, 4
	syscall
Label21:
Label20:
	li $t0, 1
	sw $t0, -40($fp)
	li $t1, 1
	addu $t0, $s7, $t1
	move $s7, $t0
	j Label15
Label16:
#打印字符串
	la $a0, $str13
	li $v0, 4
	syscall
#打印int
	lw $a0, -36($fp)
	li $v0, 1
	syscall
	lw $fp, 4($sp)
	lw $ra, 8($sp)
	lw $s0, 40($sp)
	lw $s1, 36($sp)
	lw $s2, 32($sp)
	lw $s3, 28($sp)
	lw $s4, 24($sp)
	lw $s5, 20($sp)
	lw $s6, 16($sp)
	lw $s7, 12($sp)
	add $sp, $sp, 636
	jr $ra
main:
#保存帧指针
	move $fp, $sp
#退栈空间
	sub $sp, $sp, 8
	li $t0, 10
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal factorial
	move $s1, $v0
	move $t0, $s1
	move $s0, $t0
#打印字符串
	la $a0, $str14
	li $v0, 4
	syscall
#打印int
	move $a0, $s0
	li $v0, 1
	syscall
	li $t0, 5
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	li $t0, 10
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal swap
	li $t0, 2
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal complete_num
