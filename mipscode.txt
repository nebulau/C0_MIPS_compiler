.data
	int_global_var:.word 0
	char_global_var:.word 0
	$str0:.asciiz "b > a"
	$str1:.asciiz "b >= a"
	$str2:.asciiz "1 < 2"
	$str3:.asciiz "1 <= 2"
	$str4:.asciiz "1 == 2"
	$str5:.asciiz "1 != 2"
	$str6:.asciiz "1 - 2 = true"
	$str7:.asciiz "loop value : "
	$str8:.asciiz "product value : "
	$str9:.asciiz "First parameter is : "
	$str10:.asciiz "First parameter is : "
	$str11:.asciiz "First parameter is : "
	$str12:.asciiz "First parameter is : "
	$str13:.asciiz "First parameter is : "
	$str14:.asciiz "Bad integer test parameter : "
	$str15:.asciiz "Second parameter is : "
	$str16:.asciiz "Second parameter is : "
	$str17:.asciiz "Second parameter is : "
	$str18:.asciiz "Second parameter is : "
	$str19:.asciiz "Second parameter is : "
	$str20:.asciiz "Second parameter is : "
	$str21:.asciiz "Bad char test parameter : "
	$str22:.asciiz "int_test_assign : "
	$str23:.asciiz "char_test_assign : "
	$str24:.asciiz "int_test_assign[0] : "
	$str25:.asciiz "int_test_assign[1] : "
	$str26:.asciiz "int_test_assign[2] : "
	$str27:.asciiz "char_test_assign[0] : "
	$str28:.asciiz "char_test_assign[1] : "
	$str29:.asciiz "char_test_assign[2] : "
	$str30:.asciiz "---------------test if---------------"
	$str31:.asciiz "int_global_var : "
	$str32:.asciiz "char_global_var : "
	$str33:.asciiz "---------------test while---------------"
	$str34:.asciiz "int_global_var : "
	$str35:.asciiz "char_global_var : "
	$str36:.asciiz "---------------test switch---------------"
	$str37:.asciiz "int_global_var : "
	$str38:.asciiz "char_global_var : "
	$str39:.asciiz "---------------test assign---------------"
	$str40:.asciiz "int_global_var : "
	$str41:.asciiz "char_global_var : "
	$str42:.asciiz "---------------test in out---------------"
	$str43:.asciiz "int_global_var : "
	$str44:.asciiz "char_global_var : "
	$str45:.asciiz "---------------test recursion---------------"
	$str46:.asciiz "Factorial result is : "
	$str47:.asciiz "Factorial result is : "
	$str48:.asciiz "Factorial result is : "
	$str49:.asciiz "int_global_var : "
	$str50:.asciiz "char_global_var : "
.text
	j main
testIf:
	sub $sp, $sp, 0
#ÍËÕ»¿Õ¼ä£¬½Ó×Å±£´æsÏµ¼Ä´æÆ÷ºÍ$ra,$fp
	sw $s0, 0($sp)
	sub $sp, $sp, 4
	sw $s1, 0($sp)
	sub $sp, $sp, 4
	sw $s2, 0($sp)
	sub $sp, $sp, 4
	sw $s3, 0($sp)
	sub $sp, $sp, 4
	sw $s4, 0($sp)
	sub $sp, $sp, 4
	sw $s5, 0($sp)
	sub $sp, $sp, 4
	sw $s6, 0($sp)
	sub $sp, $sp, 4
	sw $s7, 0($sp)
	sub $sp, $sp, 4
	sw $ra, 0($sp)
	sub $sp, $sp, 4
	sw $fp, 0($sp)
	sub $sp, $sp, 4
#ÖÃ$fpÎª±»µ÷ÓÃÕß»ùµØÖ·
	add $fp, $sp, 40
	li $t0, 99
	li $t1, 98
	ble $t0, $t1, Label0
#´òÓ¡×Ö·û´®
	la $a0, $str0
	li $v0, 4
	syscall
	li $a0, 10
	li $v0, 11
	syscall
Label0:
	li $t0, 99
	li $t1, 98
	blt $t0, $t1, Label1
#´òÓ¡×Ö·û´®
	la $a0, $str1
	li $v0, 4
	syscall
	li $a0, 10
	li $v0, 11
	syscall
Label1:
	li $t0, 1
	li $t1, 2
	bge $t0, $t1, Label2
#´òÓ¡×Ö·û´®
	la $a0, $str2
	li $v0, 4
	syscall
	li $a0, 10
	li $v0, 11
	syscall
Label2:
	li $t0, 1
	li $t1, 2
	bgt $t0, $t1, Label3
#´òÓ¡×Ö·û´®
	la $a0, $str3
	li $v0, 4
	syscall
	li $a0, 10
	li $v0, 11
	syscall
Label3:
	li $t0, 1
	li $t1, 2
	bne $t0, $t1, Label4
#´òÓ¡×Ö·û´®
	la $a0, $str4
	li $v0, 4
	syscall
	li $a0, 10
	li $v0, 11
	syscall
Label4:
#´òÓ¡×Ö·û´®
	la $a0, $str5
	li $v0, 4
	syscall
	li $a0, 10
	li $v0, 11
	syscall
Label5:
	li $t0, -1
	beq $t0, $0, Label6
#´òÓ¡×Ö·û´®
	la $a0, $str6
	li $v0, 4
	syscall
	li $a0, 10
	li $v0, 11
	syscall
Label6:
	li $t0, -1
	sw $t0, int_global_var
	li $t0, 97
	sw $t0, char_global_var
	add $sp, $sp, 4
	lw $fp, 0($sp)
	add $sp, $sp, 4
	lw $ra, 0($sp)
	add $sp, $sp, 4
	lw $s7, 0($sp)
	add $sp, $sp, 4
	lw $s6, 0($sp)
	add $sp, $sp, 4
	lw $s5, 0($sp)
	add $sp, $sp, 4
	lw $s4, 0($sp)
	add $sp, $sp, 4
	lw $s3, 0($sp)
	add $sp, $sp, 4
	lw $s2, 0($sp)
	add $sp, $sp, 4
	lw $s1, 0($sp)
	add $sp, $sp, 4
	lw $s0, 0($sp)
	add $sp, $sp, 0
	jr $ra
testWhile:
	sub $sp, $sp, 32
#ÍËÕ»¿Õ¼ä£¬½Ó×Å±£´æsÏµ¼Ä´æÆ÷ºÍ$ra,$fp
	sw $s0, 0($sp)
	sub $sp, $sp, 4
	sw $s1, 0($sp)
	sub $sp, $sp, 4
	sw $s2, 0($sp)
	sub $sp, $sp, 4
	sw $s3, 0($sp)
	sub $sp, $sp, 4
	sw $s4, 0($sp)
	sub $sp, $sp, 4
	sw $s5, 0($sp)
	sub $sp, $sp, 4
	sw $s6, 0($sp)
	sub $sp, $sp, 4
	sw $s7, 0($sp)
	sub $sp, $sp, 4
	sw $ra, 0($sp)
	sub $sp, $sp, 4
	sw $fp, 0($sp)
	sub $sp, $sp, 4
#ÖÃ$fpÎª±»µ÷ÓÃÕß»ùµØÖ·
	add $fp, $sp, 76
	li $t0, 0
	move $s0, $t0
	li $t0, 1
	move $s2, $t0
Label7:
	move $t0, $s0
	lw $t1, 0($fp)
	bge $t0, $t1, Label8
#´òÓ¡×Ö·û´®
	la $a0, $str7
	li $v0, 4
	syscall
#´òÓ¡int
	move $a0, $s0
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	move $t0, $s0
	li $t1, 1
	add $s3, $t0, $t1
	la $t0, -8($fp)
	move $t1, $s0
	li $t2, 4
	mul $t1, $t1, $t2
	move $t2, $s3
	sub $t0, $t0, $t1
	sw $t2, 0($t0)
	move $t0, $s0
	li $t1, 1
	add $s4, $t0, $t1
	move $t0, $s4
	move $s0, $t0
	j Label7
Label8:
	li $t0, 0
	move $s0, $t0
Label9:
	move $t0, $s0
	lw $t1, 0($fp)
	bge $t0, $t1, Label10
	la $t0, -8($fp)
	move $t1, $s0
	li $t2, 4
	mul $t1, $t1, $t2
	sub $t0, $t0, $t1
	lw $t2, 0($t0)
	move $s5, $t2
	move $t0, $s2
	move $t1, $s5
	mul $s6, $t0, $t1
	move $t0, $s6
	move $s2, $t0
	move $t0, $s0
	li $t1, 1
	add $s7, $t0, $t1
	move $t0, $s7
	move $s0, $t0
	j Label9
Label10:
#´òÓ¡×Ö·û´®
	la $a0, $str8
	li $v0, 4
	syscall
#´òÓ¡int
	move $a0, $s2
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	li $t0, -2
	sw $t0, int_global_var
	li $t0, 98
	sw $t0, char_global_var
	add $sp, $sp, 4
	lw $fp, 0($sp)
	add $sp, $sp, 4
	lw $ra, 0($sp)
	add $sp, $sp, 4
	lw $s7, 0($sp)
	add $sp, $sp, 4
	lw $s6, 0($sp)
	add $sp, $sp, 4
	lw $s5, 0($sp)
	add $sp, $sp, 4
	lw $s4, 0($sp)
	add $sp, $sp, 4
	lw $s3, 0($sp)
	add $sp, $sp, 4
	lw $s2, 0($sp)
	add $sp, $sp, 4
	lw $s1, 0($sp)
	add $sp, $sp, 4
	lw $s0, 0($sp)
	add $sp, $sp, 36
	jr $ra
testSwitchCase:
	sub $sp, $sp, 0
#ÍËÕ»¿Õ¼ä£¬½Ó×Å±£´æsÏµ¼Ä´æÆ÷ºÍ$ra,$fp
	sw $s0, 0($sp)
	sub $sp, $sp, 4
	sw $s1, 0($sp)
	sub $sp, $sp, 4
	sw $s2, 0($sp)
	sub $sp, $sp, 4
	sw $s3, 0($sp)
	sub $sp, $sp, 4
	sw $s4, 0($sp)
	sub $sp, $sp, 4
	sw $s5, 0($sp)
	sub $sp, $sp, 4
	sw $s6, 0($sp)
	sub $sp, $sp, 4
	sw $s7, 0($sp)
	sub $sp, $sp, 4
	sw $ra, 0($sp)
	sub $sp, $sp, 4
	sw $fp, 0($sp)
	sub $sp, $sp, 4
#ÖÃ$fpÎª±»µ÷ÓÃÕß»ùµØÖ·
	add $fp, $sp, 48
	lw $t0, 0($fp)
	li $t1, -2
	bne $t0, $t1, Label12
#´òÓ¡×Ö·û´®
	la $a0, $str9
	li $v0, 4
	syscall
#´òÓ¡int
	li $a0, -2
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	j Label11
Label12:
	lw $t0, 0($fp)
	li $t1, -1
	bne $t0, $t1, Label13
#´òÓ¡×Ö·û´®
	la $a0, $str10
	li $v0, 4
	syscall
#´òÓ¡int
	li $a0, -1
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	j Label11
Label13:
	lw $t0, 0($fp)
	li $t1, 0
	bne $t0, $t1, Label14
#´òÓ¡×Ö·û´®
	la $a0, $str11
	li $v0, 4
	syscall
#´òÓ¡int
	li $a0, 0
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	j Label11
Label14:
	lw $t0, 0($fp)
	li $t1, 1
	bne $t0, $t1, Label15
#´òÓ¡×Ö·û´®
	la $a0, $str12
	li $v0, 4
	syscall
#´òÓ¡int
	li $a0, 1
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	j Label11
Label15:
	lw $t0, 0($fp)
	li $t1, 2
	bne $t0, $t1, Label16
#´òÓ¡×Ö·û´®
	la $a0, $str13
	li $v0, 4
	syscall
#´òÓ¡int
	li $a0, 2
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	j Label11
Label16:
#´òÓ¡×Ö·û´®
	la $a0, $str14
	li $v0, 4
	syscall
#´òÓ¡int
	lw $a0, 0($fp)
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
Label11:
	lw $t0, -4($fp)
	li $t1, 97
	bne $t0, $t1, Label18
#´òÓ¡×Ö·û´®
	la $a0, $str15
	li $v0, 4
	syscall
#´òÓ¡char
	li $a0, 97
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	j Label17
Label18:
	lw $t0, -4($fp)
	li $t1, 65
	bne $t0, $t1, Label19
#´òÓ¡×Ö·û´®
	la $a0, $str16
	li $v0, 4
	syscall
#´òÓ¡char
	li $a0, 65
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	j Label17
Label19:
	lw $t0, -4($fp)
	li $t1, 57
	bne $t0, $t1, Label20
#´òÓ¡×Ö·û´®
	la $a0, $str17
	li $v0, 4
	syscall
#´òÓ¡char
	li $a0, 57
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	j Label17
Label20:
	lw $t0, -4($fp)
	li $t1, 95
	bne $t0, $t1, Label21
#´òÓ¡×Ö·û´®
	la $a0, $str18
	li $v0, 4
	syscall
#´òÓ¡char
	li $a0, 95
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	j Label17
Label21:
	lw $t0, -4($fp)
	li $t1, 43
	bne $t0, $t1, Label22
#´òÓ¡×Ö·û´®
	la $a0, $str19
	li $v0, 4
	syscall
#´òÓ¡char
	li $a0, 43
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	j Label17
Label22:
	lw $t0, -4($fp)
	li $t1, 42
	bne $t0, $t1, Label23
#´òÓ¡×Ö·û´®
	la $a0, $str20
	li $v0, 4
	syscall
#´òÓ¡char
	li $a0, 42
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	j Label17
Label23:
#´òÓ¡×Ö·û´®
	la $a0, $str21
	li $v0, 4
	syscall
#´òÓ¡char
	lw $a0, -4($fp)
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
Label17:
	li $t0, 0
	li $t1, 0
	bne $t0, $t1, Label25
	j Label24
Label25:
Label24:
	li $t0, -3
	sw $t0, int_global_var
	li $t0, 99
	sw $t0, char_global_var
	add $sp, $sp, 4
	lw $fp, 0($sp)
	add $sp, $sp, 4
	lw $ra, 0($sp)
	add $sp, $sp, 4
	lw $s7, 0($sp)
	add $sp, $sp, 4
	lw $s6, 0($sp)
	add $sp, $sp, 4
	lw $s5, 0($sp)
	add $sp, $sp, 4
	lw $s4, 0($sp)
	add $sp, $sp, 4
	lw $s3, 0($sp)
	add $sp, $sp, 4
	lw $s2, 0($sp)
	add $sp, $sp, 4
	lw $s1, 0($sp)
	add $sp, $sp, 4
	lw $s0, 0($sp)
	add $sp, $sp, 8
	jr $ra
returnInt:
	sub $sp, $sp, 0
#ÍËÕ»¿Õ¼ä£¬½Ó×Å±£´æsÏµ¼Ä´æÆ÷ºÍ$ra,$fp
	sw $s0, 0($sp)
	sub $sp, $sp, 4
	sw $s1, 0($sp)
	sub $sp, $sp, 4
	sw $s2, 0($sp)
	sub $sp, $sp, 4
	sw $s3, 0($sp)
	sub $sp, $sp, 4
	sw $s4, 0($sp)
	sub $sp, $sp, 4
	sw $s5, 0($sp)
	sub $sp, $sp, 4
	sw $s6, 0($sp)
	sub $sp, $sp, 4
	sw $s7, 0($sp)
	sub $sp, $sp, 4
	sw $ra, 0($sp)
	sub $sp, $sp, 4
	sw $fp, 0($sp)
	sub $sp, $sp, 4
#ÖÃ$fpÎª±»µ÷ÓÃÕß»ùµØÖ·
	add $fp, $sp, 40
	li $v0, 10
	add $sp, $sp, 4
	lw $fp, 0($sp)
	add $sp, $sp, 4
	lw $ra, 0($sp)
	add $sp, $sp, 4
	lw $s7, 0($sp)
	add $sp, $sp, 4
	lw $s6, 0($sp)
	add $sp, $sp, 4
	lw $s5, 0($sp)
	add $sp, $sp, 4
	lw $s4, 0($sp)
	add $sp, $sp, 4
	lw $s3, 0($sp)
	add $sp, $sp, 4
	lw $s2, 0($sp)
	add $sp, $sp, 4
	lw $s1, 0($sp)
	add $sp, $sp, 4
	lw $s0, 0($sp)
	add $sp, $sp, 0
	jr $ra
returnChar:
	sub $sp, $sp, 0
#ÍËÕ»¿Õ¼ä£¬½Ó×Å±£´æsÏµ¼Ä´æÆ÷ºÍ$ra,$fp
	sw $s0, 0($sp)
	sub $sp, $sp, 4
	sw $s1, 0($sp)
	sub $sp, $sp, 4
	sw $s2, 0($sp)
	sub $sp, $sp, 4
	sw $s3, 0($sp)
	sub $sp, $sp, 4
	sw $s4, 0($sp)
	sub $sp, $sp, 4
	sw $s5, 0($sp)
	sub $sp, $sp, 4
	sw $s6, 0($sp)
	sub $sp, $sp, 4
	sw $s7, 0($sp)
	sub $sp, $sp, 4
	sw $ra, 0($sp)
	sub $sp, $sp, 4
	sw $fp, 0($sp)
	sub $sp, $sp, 4
#ÖÃ$fpÎª±»µ÷ÓÃÕß»ùµØÖ·
	add $fp, $sp, 40
	li $v0, 114
	add $sp, $sp, 4
	lw $fp, 0($sp)
	add $sp, $sp, 4
	lw $ra, 0($sp)
	add $sp, $sp, 4
	lw $s7, 0($sp)
	add $sp, $sp, 4
	lw $s6, 0($sp)
	add $sp, $sp, 4
	lw $s5, 0($sp)
	add $sp, $sp, 4
	lw $s4, 0($sp)
	add $sp, $sp, 4
	lw $s3, 0($sp)
	add $sp, $sp, 4
	lw $s2, 0($sp)
	add $sp, $sp, 4
	lw $s1, 0($sp)
	add $sp, $sp, 4
	lw $s0, 0($sp)
	add $sp, $sp, 0
	jr $ra
returnIntParameter:
	sub $sp, $sp, 4
#ÍËÕ»¿Õ¼ä£¬½Ó×Å±£´æsÏµ¼Ä´æÆ÷ºÍ$ra,$fp
	sw $s0, 0($sp)
	sub $sp, $sp, 4
	sw $s1, 0($sp)
	sub $sp, $sp, 4
	sw $s2, 0($sp)
	sub $sp, $sp, 4
	sw $s3, 0($sp)
	sub $sp, $sp, 4
	sw $s4, 0($sp)
	sub $sp, $sp, 4
	sw $s5, 0($sp)
	sub $sp, $sp, 4
	sw $s6, 0($sp)
	sub $sp, $sp, 4
	sw $s7, 0($sp)
	sub $sp, $sp, 4
	sw $ra, 0($sp)
	sub $sp, $sp, 4
	sw $fp, 0($sp)
	sub $sp, $sp, 4
#ÖÃ$fpÎª±»µ÷ÓÃÕß»ùµØÖ·
	add $fp, $sp, 48
	lw $t0, 0($fp)
	move $s0, $t0
	move $v0, $s0
	add $sp, $sp, 4
	lw $fp, 0($sp)
	add $sp, $sp, 4
	lw $ra, 0($sp)
	add $sp, $sp, 4
	lw $s7, 0($sp)
	add $sp, $sp, 4
	lw $s6, 0($sp)
	add $sp, $sp, 4
	lw $s5, 0($sp)
	add $sp, $sp, 4
	lw $s4, 0($sp)
	add $sp, $sp, 4
	lw $s3, 0($sp)
	add $sp, $sp, 4
	lw $s2, 0($sp)
	add $sp, $sp, 4
	lw $s1, 0($sp)
	add $sp, $sp, 4
	lw $s0, 0($sp)
	add $sp, $sp, 8
	jr $ra
returnCharParameter:
	sub $sp, $sp, 4
#ÍËÕ»¿Õ¼ä£¬½Ó×Å±£´æsÏµ¼Ä´æÆ÷ºÍ$ra,$fp
	sw $s0, 0($sp)
	sub $sp, $sp, 4
	sw $s1, 0($sp)
	sub $sp, $sp, 4
	sw $s2, 0($sp)
	sub $sp, $sp, 4
	sw $s3, 0($sp)
	sub $sp, $sp, 4
	sw $s4, 0($sp)
	sub $sp, $sp, 4
	sw $s5, 0($sp)
	sub $sp, $sp, 4
	sw $s6, 0($sp)
	sub $sp, $sp, 4
	sw $s7, 0($sp)
	sub $sp, $sp, 4
	sw $ra, 0($sp)
	sub $sp, $sp, 4
	sw $fp, 0($sp)
	sub $sp, $sp, 4
#ÖÃ$fpÎª±»µ÷ÓÃÕß»ùµØÖ·
	add $fp, $sp, 48
	lw $t0, 0($fp)
	move $s0, $t0
	move $v0, $s0
	add $sp, $sp, 4
	lw $fp, 0($sp)
	add $sp, $sp, 4
	lw $ra, 0($sp)
	add $sp, $sp, 4
	lw $s7, 0($sp)
	add $sp, $sp, 4
	lw $s6, 0($sp)
	add $sp, $sp, 4
	lw $s5, 0($sp)
	add $sp, $sp, 4
	lw $s4, 0($sp)
	add $sp, $sp, 4
	lw $s3, 0($sp)
	add $sp, $sp, 4
	lw $s2, 0($sp)
	add $sp, $sp, 4
	lw $s1, 0($sp)
	add $sp, $sp, 4
	lw $s0, 0($sp)
	add $sp, $sp, 8
	jr $ra
testAssign:
	sub $sp, $sp, 108
#ÍËÕ»¿Õ¼ä£¬½Ó×Å±£´æsÏµ¼Ä´æÆ÷ºÍ$ra,$fp
	sw $s0, 0($sp)
	sub $sp, $sp, 4
	sw $s1, 0($sp)
	sub $sp, $sp, 4
	sw $s2, 0($sp)
	sub $sp, $sp, 4
	sw $s3, 0($sp)
	sub $sp, $sp, 4
	sw $s4, 0($sp)
	sub $sp, $sp, 4
	sw $s5, 0($sp)
	sub $sp, $sp, 4
	sw $s6, 0($sp)
	sub $sp, $sp, 4
	sw $s7, 0($sp)
	sub $sp, $sp, 4
	sw $ra, 0($sp)
	sub $sp, $sp, 4
	sw $fp, 0($sp)
	sub $sp, $sp, 4
#ÖÃ$fpÎª±»µ÷ÓÃÕß»ùµØÖ·
	add $fp, $sp, 148
	la $t0, -4($fp)
	li $t1, 0
	li $t2, 4
	mul $t1, $t1, $t2
	li $t2, 2
	sub $t0, $t0, $t1
	sw $t2, 0($t0)
	jal returnInt
	move $s4, $v0
	li $t0, 0
	move $t1, $s4
	sub $s5, $t0, $t1
	jal returnChar
	move $s6, $v0
	move $t0, $s6
	li $t1, 97
	sub $s7, $t0, $t1
	li $t0, 10
	move $t1, $s7
	mul $t0, $t0, $t1
	sw $t0, -48($fp)
	li $t0, 97
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal returnIntParameter
	sw $v0, -52($fp)
	lw $t0, -48($fp)
	lw $t1, -52($fp)
	add $t0, $t0, $t1
	sw $t0, -56($fp)
	move $t0, $s5
	lw $t1, -56($fp)
	add $t0, $t0, $t1
	sw $t0, -60($fp)
	la $t0, -4($fp)
	li $t1, 1
	li $t2, 4
	mul $t1, $t1, $t2
	lw $t2, -60($fp)
	sub $t0, $t0, $t1
	sw $t2, 0($t0)
	la $t0, -4($fp)
	li $t1, 2
	li $t2, 4
	mul $t1, $t1, $t2
	li $t2, 1
	sub $t0, $t0, $t1
	sw $t2, 0($t0)
	li $t0, -2
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal returnIntParameter
	sw $v0, -64($fp)
	lw $t0, -64($fp)
	li $t1, 2
	mul $t0, $t0, $t1
	sw $t0, -68($fp)
	la $t0, -4($fp)
	li $t1, 0
	li $t2, 4
	mul $t1, $t1, $t2
	sub $t0, $t0, $t1
	lw $t2, 0($t0)
	sw $t2, -72($fp)
	lw $t0, -68($fp)
	lw $t1, -72($fp)
	div $t0, $t0, $t1
	sw $t0, -76($fp)
	li $t0, 10
	lw $t1, -76($fp)
	add $t0, $t0, $t1
	sw $t0, -80($fp)
	lw $t0, -80($fp)
	move $s0, $t0
	la $t0, -20($fp)
	li $t1, 0
	li $t2, 4
	mul $t1, $t1, $t2
	li $t2, 97
	sub $t0, $t0, $t1
	sw $t2, 0($t0)
	la $t0, -20($fp)
	li $t1, 0
	li $t2, 4
	mul $t1, $t1, $t2
	sub $t0, $t0, $t1
	lw $t2, 0($t0)
	sw $t2, -84($fp)
	lw $t0, -84($fp)
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal returnCharParameter
	sw $v0, -88($fp)
	la $t0, -20($fp)
	li $t1, 1
	li $t2, 4
	mul $t1, $t1, $t2
	lw $t2, -88($fp)
	sub $t0, $t0, $t1
	sw $t2, 0($t0)
	jal returnChar
	sw $v0, -92($fp)
	la $t0, -20($fp)
	li $t1, 2
	li $t2, 4
	mul $t1, $t1, $t2
	lw $t2, -92($fp)
	sub $t0, $t0, $t1
	sw $t2, 0($t0)
	la $t0, -20($fp)
	li $t1, 1
	li $t2, 4
	mul $t1, $t1, $t2
	sub $t0, $t0, $t1
	lw $t2, 0($t0)
	sw $t2, -96($fp)
	lw $t0, -96($fp)
	move $s2, $t0
#´òÓ¡×Ö·û´®
	la $a0, $str22
	li $v0, 4
	syscall
#´òÓ¡int
	move $a0, $s0
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#´òÓ¡×Ö·û´®
	la $a0, $str23
	li $v0, 4
	syscall
#´òÓ¡char
	move $a0, $s2
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#´òÓ¡×Ö·û´®
	la $a0, $str24
	li $v0, 4
	syscall
	la $t0, -4($fp)
	li $t1, 0
	li $t2, 4
	mul $t1, $t1, $t2
	sub $t0, $t0, $t1
	lw $t2, 0($t0)
	sw $t2, -100($fp)
#´òÓ¡int
	lw $a0, -100($fp)
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#´òÓ¡×Ö·û´®
	la $a0, $str25
	li $v0, 4
	syscall
	la $t0, -4($fp)
	li $t1, 1
	li $t2, 4
	mul $t1, $t1, $t2
	sub $t0, $t0, $t1
	lw $t2, 0($t0)
	sw $t2, -104($fp)
#´òÓ¡int
	lw $a0, -104($fp)
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#´òÓ¡×Ö·û´®
	la $a0, $str26
	li $v0, 4
	syscall
	la $t0, -4($fp)
	li $t1, 2
	li $t2, 4
	mul $t1, $t1, $t2
	sub $t0, $t0, $t1
	lw $t2, 0($t0)
	sw $t2, -108($fp)
#´òÓ¡int
	lw $a0, -108($fp)
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#´òÓ¡×Ö·û´®
	la $a0, $str27
	li $v0, 4
	syscall
	la $t0, -20($fp)
	li $t1, 0
	li $t2, 4
	mul $t1, $t1, $t2
	sub $t0, $t0, $t1
	lw $t2, 0($t0)
	sw $t2, -112($fp)
#´òÓ¡char
	lw $a0, -112($fp)
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#´òÓ¡×Ö·û´®
	la $a0, $str28
	li $v0, 4
	syscall
	la $t0, -20($fp)
	li $t1, 1
	li $t2, 4
	mul $t1, $t1, $t2
	sub $t0, $t0, $t1
	lw $t2, 0($t0)
	sw $t2, -116($fp)
#´òÓ¡char
	lw $a0, -116($fp)
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#´òÓ¡×Ö·û´®
	la $a0, $str29
	li $v0, 4
	syscall
	la $t0, -20($fp)
	li $t1, 2
	li $t2, 4
	mul $t1, $t1, $t2
	sub $t0, $t0, $t1
	lw $t2, 0($t0)
	sw $t2, -120($fp)
#´òÓ¡char
	lw $a0, -120($fp)
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	li $t0, -4
	sw $t0, int_global_var
	li $t0, 100
	sw $t0, char_global_var
	add $sp, $sp, 4
	lw $fp, 0($sp)
	add $sp, $sp, 4
	lw $ra, 0($sp)
	add $sp, $sp, 4
	lw $s7, 0($sp)
	add $sp, $sp, 4
	lw $s6, 0($sp)
	add $sp, $sp, 4
	lw $s5, 0($sp)
	add $sp, $sp, 4
	lw $s4, 0($sp)
	add $sp, $sp, 4
	lw $s3, 0($sp)
	add $sp, $sp, 4
	lw $s2, 0($sp)
	add $sp, $sp, 4
	lw $s1, 0($sp)
	add $sp, $sp, 4
	lw $s0, 0($sp)
	add $sp, $sp, 108
	jr $ra
testInputOutput:
	sub $sp, $sp, 8
#ÍËÕ»¿Õ¼ä£¬½Ó×Å±£´æsÏµ¼Ä´æÆ÷ºÍ$ra,$fp
	sw $s0, 0($sp)
	sub $sp, $sp, 4
	sw $s1, 0($sp)
	sub $sp, $sp, 4
	sw $s2, 0($sp)
	sub $sp, $sp, 4
	sw $s3, 0($sp)
	sub $sp, $sp, 4
	sw $s4, 0($sp)
	sub $sp, $sp, 4
	sw $s5, 0($sp)
	sub $sp, $sp, 4
	sw $s6, 0($sp)
	sub $sp, $sp, 4
	sw $s7, 0($sp)
	sub $sp, $sp, 4
	sw $ra, 0($sp)
	sub $sp, $sp, 4
	sw $fp, 0($sp)
	sub $sp, $sp, 4
#ÖÃ$fpÎª±»µ÷ÓÃÕß»ùµØÖ·
	add $fp, $sp, 48
#¶ÁÈ¡int
	li $v0, 5
	syscall 
	move $s0, $v0
#¶ÁÈ¡char
	li $v0, 12
	syscall 
	move $s1, $v0
#´òÓ¡int
	move $a0, $s0
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#´òÓ¡char
	move $a0, $s1
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	li $t0, -5
	sw $t0, int_global_var
	li $t0, 101
	sw $t0, char_global_var
	add $sp, $sp, 4
	lw $fp, 0($sp)
	add $sp, $sp, 4
	lw $ra, 0($sp)
	add $sp, $sp, 4
	lw $s7, 0($sp)
	add $sp, $sp, 4
	lw $s6, 0($sp)
	add $sp, $sp, 4
	lw $s5, 0($sp)
	add $sp, $sp, 4
	lw $s4, 0($sp)
	add $sp, $sp, 4
	lw $s3, 0($sp)
	add $sp, $sp, 4
	lw $s2, 0($sp)
	add $sp, $sp, 4
	lw $s1, 0($sp)
	add $sp, $sp, 4
	lw $s0, 0($sp)
	add $sp, $sp, 8
	jr $ra
testRecursion:
	sub $sp, $sp, 12
#ÍËÕ»¿Õ¼ä£¬½Ó×Å±£´æsÏµ¼Ä´æÆ÷ºÍ$ra,$fp
	sw $s0, 0($sp)
	sub $sp, $sp, 4
	sw $s1, 0($sp)
	sub $sp, $sp, 4
	sw $s2, 0($sp)
	sub $sp, $sp, 4
	sw $s3, 0($sp)
	sub $sp, $sp, 4
	sw $s4, 0($sp)
	sub $sp, $sp, 4
	sw $s5, 0($sp)
	sub $sp, $sp, 4
	sw $s6, 0($sp)
	sub $sp, $sp, 4
	sw $s7, 0($sp)
	sub $sp, $sp, 4
	sw $ra, 0($sp)
	sub $sp, $sp, 4
	sw $fp, 0($sp)
	sub $sp, $sp, 4
#ÖÃ$fpÎª±»µ÷ÓÃÕß»ùµØÖ·
	add $fp, $sp, 56
	lw $t0, 0($fp)
	li $t1, 1
	bne $t0, $t1, Label26
	lw $v0, 0($fp)
	add $sp, $sp, 4
	lw $fp, 0($sp)
	add $sp, $sp, 4
	lw $ra, 0($sp)
	add $sp, $sp, 4
	lw $s7, 0($sp)
	add $sp, $sp, 4
	lw $s6, 0($sp)
	add $sp, $sp, 4
	lw $s5, 0($sp)
	add $sp, $sp, 4
	lw $s4, 0($sp)
	add $sp, $sp, 4
	lw $s3, 0($sp)
	add $sp, $sp, 4
	lw $s2, 0($sp)
	add $sp, $sp, 4
	lw $s1, 0($sp)
	add $sp, $sp, 4
	lw $s0, 0($sp)
	add $sp, $sp, 16
	jr $ra
Label26:
	lw $t0, 0($fp)
	li $t1, 1
	sub $s0, $t0, $t1
	move $t0, $s0
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal testRecursion
	move $s1, $v0
	lw $t0, 0($fp)
	move $t1, $s1
	mul $s2, $t0, $t1
	move $v0, $s2
	add $sp, $sp, 4
	lw $fp, 0($sp)
	add $sp, $sp, 4
	lw $ra, 0($sp)
	add $sp, $sp, 4
	lw $s7, 0($sp)
	add $sp, $sp, 4
	lw $s6, 0($sp)
	add $sp, $sp, 4
	lw $s5, 0($sp)
	add $sp, $sp, 4
	lw $s4, 0($sp)
	add $sp, $sp, 4
	lw $s3, 0($sp)
	add $sp, $sp, 4
	lw $s2, 0($sp)
	add $sp, $sp, 4
	lw $s1, 0($sp)
	add $sp, $sp, 4
	lw $s0, 0($sp)
	add $sp, $sp, 16
	jr $ra
testRecursion2:
	sub $sp, $sp, 12
#ÍËÕ»¿Õ¼ä£¬½Ó×Å±£´æsÏµ¼Ä´æÆ÷ºÍ$ra,$fp
	sw $s0, 0($sp)
	sub $sp, $sp, 4
	sw $s1, 0($sp)
	sub $sp, $sp, 4
	sw $s2, 0($sp)
	sub $sp, $sp, 4
	sw $s3, 0($sp)
	sub $sp, $sp, 4
	sw $s4, 0($sp)
	sub $sp, $sp, 4
	sw $s5, 0($sp)
	sub $sp, $sp, 4
	sw $s6, 0($sp)
	sub $sp, $sp, 4
	sw $s7, 0($sp)
	sub $sp, $sp, 4
	sw $ra, 0($sp)
	sub $sp, $sp, 4
	sw $fp, 0($sp)
	sub $sp, $sp, 4
#ÖÃ$fpÎª±»µ÷ÓÃÕß»ùµØÖ·
	add $fp, $sp, 56
	lw $t0, 0($fp)
	li $t1, 0
	bne $t0, $t1, Label28
	li $v0, 1
	add $sp, $sp, 4
	lw $fp, 0($sp)
	add $sp, $sp, 4
	lw $ra, 0($sp)
	add $sp, $sp, 4
	lw $s7, 0($sp)
	add $sp, $sp, 4
	lw $s6, 0($sp)
	add $sp, $sp, 4
	lw $s5, 0($sp)
	add $sp, $sp, 4
	lw $s4, 0($sp)
	add $sp, $sp, 4
	lw $s3, 0($sp)
	add $sp, $sp, 4
	lw $s2, 0($sp)
	add $sp, $sp, 4
	lw $s1, 0($sp)
	add $sp, $sp, 4
	lw $s0, 0($sp)
	add $sp, $sp, 16
	jr $ra
	j Label27
Label28:
	lw $t0, 0($fp)
	li $t1, 1
	bne $t0, $t1, Label29
	li $v0, 1
	add $sp, $sp, 4
	lw $fp, 0($sp)
	add $sp, $sp, 4
	lw $ra, 0($sp)
	add $sp, $sp, 4
	lw $s7, 0($sp)
	add $sp, $sp, 4
	lw $s6, 0($sp)
	add $sp, $sp, 4
	lw $s5, 0($sp)
	add $sp, $sp, 4
	lw $s4, 0($sp)
	add $sp, $sp, 4
	lw $s3, 0($sp)
	add $sp, $sp, 4
	lw $s2, 0($sp)
	add $sp, $sp, 4
	lw $s1, 0($sp)
	add $sp, $sp, 4
	lw $s0, 0($sp)
	add $sp, $sp, 16
	jr $ra
	j Label27
Label29:
	lw $t0, 0($fp)
	li $t1, 1
	sub $s0, $t0, $t1
	move $t0, $s0
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal testRecursion2
	move $s1, $v0
	lw $t0, 0($fp)
	move $t1, $s1
	mul $s2, $t0, $t1
	move $v0, $s2
	add $sp, $sp, 4
	lw $fp, 0($sp)
	add $sp, $sp, 4
	lw $ra, 0($sp)
	add $sp, $sp, 4
	lw $s7, 0($sp)
	add $sp, $sp, 4
	lw $s6, 0($sp)
	add $sp, $sp, 4
	lw $s5, 0($sp)
	add $sp, $sp, 4
	lw $s4, 0($sp)
	add $sp, $sp, 4
	lw $s3, 0($sp)
	add $sp, $sp, 4
	lw $s2, 0($sp)
	add $sp, $sp, 4
	lw $s1, 0($sp)
	add $sp, $sp, 4
	lw $s0, 0($sp)
	add $sp, $sp, 16
	jr $ra
Label27:
testTrick:
	sub $sp, $sp, 0
#ÍËÕ»¿Õ¼ä£¬½Ó×Å±£´æsÏµ¼Ä´æÆ÷ºÍ$ra,$fp
	sw $s0, 0($sp)
	sub $sp, $sp, 4
	sw $s1, 0($sp)
	sub $sp, $sp, 4
	sw $s2, 0($sp)
	sub $sp, $sp, 4
	sw $s3, 0($sp)
	sub $sp, $sp, 4
	sw $s4, 0($sp)
	sub $sp, $sp, 4
	sw $s5, 0($sp)
	sub $sp, $sp, 4
	sw $s6, 0($sp)
	sub $sp, $sp, 4
	sw $s7, 0($sp)
	sub $sp, $sp, 4
	sw $ra, 0($sp)
	sub $sp, $sp, 4
	sw $fp, 0($sp)
	sub $sp, $sp, 4
#ÖÃ$fpÎª±»µ÷ÓÃÕß»ùµØÖ·
	add $fp, $sp, 40
	add $sp, $sp, 4
	lw $fp, 0($sp)
	add $sp, $sp, 4
	lw $ra, 0($sp)
	add $sp, $sp, 4
	lw $s7, 0($sp)
	add $sp, $sp, 4
	lw $s6, 0($sp)
	add $sp, $sp, 4
	lw $s5, 0($sp)
	add $sp, $sp, 4
	lw $s4, 0($sp)
	add $sp, $sp, 4
	lw $s3, 0($sp)
	add $sp, $sp, 4
	lw $s2, 0($sp)
	add $sp, $sp, 4
	lw $s1, 0($sp)
	add $sp, $sp, 4
	lw $s0, 0($sp)
	add $sp, $sp, 0
	jr $ra
testCallFunction:
	sub $sp, $sp, 16
#ÍËÕ»¿Õ¼ä£¬½Ó×Å±£´æsÏµ¼Ä´æÆ÷ºÍ$ra,$fp
	sw $s0, 0($sp)
	sub $sp, $sp, 4
	sw $s1, 0($sp)
	sub $sp, $sp, 4
	sw $s2, 0($sp)
	sub $sp, $sp, 4
	sw $s3, 0($sp)
	sub $sp, $sp, 4
	sw $s4, 0($sp)
	sub $sp, $sp, 4
	sw $s5, 0($sp)
	sub $sp, $sp, 4
	sw $s6, 0($sp)
	sub $sp, $sp, 4
	sw $s7, 0($sp)
	sub $sp, $sp, 4
	sw $ra, 0($sp)
	sub $sp, $sp, 4
	sw $fp, 0($sp)
	sub $sp, $sp, 4
#ÖÃ$fpÎª±»µ÷ÓÃÕß»ùµØÖ·
	add $fp, $sp, 56
#´òÓ¡×Ö·û´®
	la $a0, $str30
	li $v0, 4
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	jal testIf
#´òÓ¡×Ö·û´®
	la $a0, $str31
	li $v0, 4
	syscall
#´òÓ¡int
	lw $a0, int_global_var
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#´òÓ¡×Ö·û´®
	la $a0, $str32
	li $v0, 4
	syscall
#´òÓ¡char
	lw $a0, char_global_var
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#´òÓ¡×Ö·û´®
	la $a0, $str33
	li $v0, 4
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	li $t0, 5
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal testWhile
#´òÓ¡×Ö·û´®
	la $a0, $str34
	li $v0, 4
	syscall
#´òÓ¡int
	lw $a0, int_global_var
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#´òÓ¡×Ö·û´®
	la $a0, $str35
	li $v0, 4
	syscall
#´òÓ¡char
	lw $a0, char_global_var
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#´òÓ¡×Ö·û´®
	la $a0, $str36
	li $v0, 4
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	li $t0, 1
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	li $t0, 97
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal testSwitchCase
	li $t0, -1
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	li $t0, 43
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal testSwitchCase
	li $t0, 0
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	li $t0, 42
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal testSwitchCase
	li $t0, -3
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	li $t0, 95
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal testSwitchCase
	li $t0, 3
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	li $t0, 57
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal testSwitchCase
#´òÓ¡×Ö·û´®
	la $a0, $str37
	li $v0, 4
	syscall
#´òÓ¡int
	lw $a0, int_global_var
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#´òÓ¡×Ö·û´®
	la $a0, $str38
	li $v0, 4
	syscall
#´òÓ¡char
	lw $a0, char_global_var
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#´òÓ¡×Ö·û´®
	la $a0, $str39
	li $v0, 4
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	jal testAssign
#´òÓ¡×Ö·û´®
	la $a0, $str40
	li $v0, 4
	syscall
#´òÓ¡int
	lw $a0, int_global_var
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#´òÓ¡×Ö·û´®
	la $a0, $str41
	li $v0, 4
	syscall
#´òÓ¡char
	lw $a0, char_global_var
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#´òÓ¡×Ö·û´®
	la $a0, $str42
	li $v0, 4
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	jal testInputOutput
#´òÓ¡×Ö·û´®
	la $a0, $str43
	li $v0, 4
	syscall
#´òÓ¡int
	lw $a0, int_global_var
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#´òÓ¡×Ö·û´®
	la $a0, $str44
	li $v0, 4
	syscall
#´òÓ¡char
	lw $a0, char_global_var
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#´òÓ¡×Ö·û´®
	la $a0, $str45
	li $v0, 4
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	li $t0, 5
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal testRecursion
	move $s1, $v0
	move $t0, $s1
	move $s0, $t0
#´òÓ¡×Ö·û´®
	la $a0, $str46
	li $v0, 4
	syscall
#´òÓ¡int
	move $a0, $s0
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	li $t0, 8
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal testRecursion
	move $s2, $v0
	move $t0, $s2
	move $s0, $t0
#´òÓ¡×Ö·û´®
	la $a0, $str47
	li $v0, 4
	syscall
#´òÓ¡int
	move $a0, $s0
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	li $t0, 0
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal testRecursion2
	move $s3, $v0
	move $t0, $s3
	move $s0, $t0
#´òÓ¡×Ö·û´®
	la $a0, $str48
	li $v0, 4
	syscall
#´òÓ¡int
	move $a0, $s0
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	li $t0, -6
	sw $t0, int_global_var
	li $t0, 102
	sw $t0, char_global_var
	add $sp, $sp, 4
	lw $fp, 0($sp)
	add $sp, $sp, 4
	lw $ra, 0($sp)
	add $sp, $sp, 4
	lw $s7, 0($sp)
	add $sp, $sp, 4
	lw $s6, 0($sp)
	add $sp, $sp, 4
	lw $s5, 0($sp)
	add $sp, $sp, 4
	lw $s4, 0($sp)
	add $sp, $sp, 4
	lw $s3, 0($sp)
	add $sp, $sp, 4
	lw $s2, 0($sp)
	add $sp, $sp, 4
	lw $s1, 0($sp)
	add $sp, $sp, 4
	lw $s0, 0($sp)
	add $sp, $sp, 16
	jr $ra
main:
#±£´æÖ¡Ö¸Õë
	move $fp, $sp
#ÍËÕ»¿Õ¼ä
	sub $sp, $sp, 8
	jal testCallFunction
	jal testTrick
	li $t0, 0
	move $s0, $t0
	li $t0, 95
	move $s1, $t0
#´òÓ¡×Ö·û´®
	la $a0, $str49
	li $v0, 4
	syscall
#´òÓ¡int
	move $a0, $s0
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#´òÓ¡×Ö·û´®
	la $a0, $str50
	li $v0, 4
	syscall
#´òÓ¡char
	move $a0, $s1
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
