.data
	global_1:.word 0
	Global_1:.word 0
	Global_2:.word 0:40
	Global_3:.word 0:40
	$str0:.asciiz "take "
	$str1:.asciiz " from "
	$str2:.asciiz " to "
.text
	j main
hanoi:
#为函数局部变量和临时变量退栈空间
	sub $sp, $sp, 8
#退栈空间，接着保存s系寄存器和$ra,$fp
	sub $sp, $sp, 40
	sw $s0, 40($sp)
	sw $s1, 36($sp)
	sw $s2, 32($sp)
	sw $s3, 28($sp)
	sw $s4, 24($sp)
	sw $s5, 20($sp)
	sw $s6, 16($sp)
	sw $s7, 12($sp)
	sw $ra, 8($sp)
	sw $fp, 4($sp)
#置$fp为被调用者基地址
	add $fp, $sp, 64
	lw $t0, 0($fp)
	li $t1, 0
	ble $t0, $t1, Label0
	lw $t0, 0($fp)
	li $t1, 1
	sub $s0, $t0, $t1
	move $t0, $s0
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	lw $t0, -4($fp)
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	lw $t0, -12($fp)
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	lw $t0, -8($fp)
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal hanoi
#打印字符串
	la $a0, $str0
	li $v0, 4
	syscall
#打印char
	li $a0, 45
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#打印int
	lw $a0, 0($fp)
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#打印char
	li $a0, 45
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#打印字符串
	la $a0, $str1
	li $v0, 4
	syscall
#打印char
	li $a0, 45
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#打印char
	lw $a0, -4($fp)
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#打印char
	li $a0, 45
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#打印字符串
	la $a0, $str2
	li $v0, 4
	syscall
#打印char
	li $a0, 45
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#打印char
	lw $a0, -12($fp)
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#打印char
	li $a0, 45
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	lw $t0, 0($fp)
	li $t1, 1
	sub $s1, $t0, $t1
	move $t0, $s1
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	lw $t0, -8($fp)
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	lw $t0, -4($fp)
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	lw $t0, -12($fp)
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal hanoi
Label0:
	lw $fp, 4($sp)
	lw $ra, 8($sp)
	lw $s7, 12($sp)
	lw $s6, 16($sp)
	lw $s5, 20($sp)
	lw $s4, 24($sp)
	lw $s3, 28($sp)
	lw $s2, 32($sp)
	lw $s1, 36($sp)
	lw $s0, 40($sp)
	add $sp, $sp, 64
	jr $ra
func_1:
#为函数局部变量和临时变量退栈空间
	sub $sp, $sp, 8
#退栈空间，接着保存s系寄存器和$ra,$fp
	sub $sp, $sp, 40
	sw $s0, 40($sp)
	sw $s1, 36($sp)
	sw $s2, 32($sp)
	sw $s3, 28($sp)
	sw $s4, 24($sp)
	sw $s5, 20($sp)
	sw $s6, 16($sp)
	sw $s7, 12($sp)
	sw $ra, 8($sp)
	sw $fp, 4($sp)
#置$fp为被调用者基地址
	add $fp, $sp, 48
	li $t0, 99
	move $s1, $t0
	li $t0, 0
	move $s0, $t0
Label1:
	move $t0, $s0
	li $t1, 10
	bge $t0, $t1, Label2
	move $t0, $s0
	li $t1, 1
	add $s0, $t0, $t1
	la $t0, Global_2
	move $t1, $s0
	li $t2, 4
	mul $t1, $t1, $t2
	li $t2, 98
	add $t0, $t0, $t1
	sw $t2, 0($t0)
	j Label1
Label2:
	move $v0, $s1
	lw $fp, 4($sp)
	lw $ra, 8($sp)
	lw $s7, 12($sp)
	lw $s6, 16($sp)
	lw $s5, 20($sp)
	lw $s4, 24($sp)
	lw $s3, 28($sp)
	lw $s2, 32($sp)
	lw $s1, 36($sp)
	lw $s0, 40($sp)
	add $sp, $sp, 48
	jr $ra
func_2:
#为函数局部变量和临时变量退栈空间
	sub $sp, $sp, 12
#退栈空间，接着保存s系寄存器和$ra,$fp
	sub $sp, $sp, 40
	sw $s0, 40($sp)
	sw $s1, 36($sp)
	sw $s2, 32($sp)
	sw $s3, 28($sp)
	sw $s4, 24($sp)
	sw $s5, 20($sp)
	sw $s6, 16($sp)
	sw $s7, 12($sp)
	sw $ra, 8($sp)
	sw $fp, 4($sp)
#置$fp为被调用者基地址
	add $fp, $sp, 64
	li $t0, 109
	move $s1, $t0
	lw $t0, -4($fp)
	li $t1, 0
	ble $t0, $t1, Label3
	li $t0, 110
	move $s1, $t0
	lw $t0, -4($fp)
	li $t1, 10
	bgt $t0, $t1, Label4
	li $t0, 0
	move $s0, $t0
	li $t0, 111
	move $s1, $t0
Label5:
	lw $t0, -4($fp)
	li $t1, 2
	div $s2, $t0, $t1
	move $t0, $s0
	move $t1, $s2
	bge $t0, $t1, Label6
	la $t0, Global_3
	move $t1, $s0
	li $t2, 4
	mul $t1, $t1, $t2
	lw $t2, 0($fp)
	add $t0, $t0, $t1
	sw $t2, 0($t0)
	move $t0, $s0
	li $t1, 1
	add $s0, $t0, $t1
	j Label5
Label6:
Label7:
	move $t0, $s0
	lw $t1, -4($fp)
	bge $t0, $t1, Label8
	la $t0, Global_3
	move $t1, $s0
	li $t2, 4
	mul $t1, $t1, $t2
	lw $t2, -8($fp)
	add $t0, $t0, $t1
	sw $t2, 0($t0)
	move $t0, $s0
	li $t1, 1
	add $s0, $t0, $t1
	j Label7
Label8:
Label4:
Label3:
	move $v0, $s1
	lw $fp, 4($sp)
	lw $ra, 8($sp)
	lw $s7, 12($sp)
	lw $s6, 16($sp)
	lw $s5, 20($sp)
	lw $s4, 24($sp)
	lw $s3, 28($sp)
	lw $s2, 32($sp)
	lw $s1, 36($sp)
	lw $s0, 40($sp)
	add $sp, $sp, 64
	jr $ra
func_3:
#为函数局部变量和临时变量退栈空间
	sub $sp, $sp, 8
#退栈空间，接着保存s系寄存器和$ra,$fp
	sub $sp, $sp, 40
	sw $s0, 40($sp)
	sw $s1, 36($sp)
	sw $s2, 32($sp)
	sw $s3, 28($sp)
	sw $s4, 24($sp)
	sw $s5, 20($sp)
	sw $s6, 16($sp)
	sw $s7, 12($sp)
	sw $ra, 8($sp)
	sw $fp, 4($sp)
#置$fp为被调用者基地址
	add $fp, $sp, 48
	li $t0, 1
	move $s0, $t0
	li $t0, 1
	move $s1, $t0
Label9:
	move $t0, $s1
	li $t1, 5
	bge $t0, $t1, Label10
	move $t0, $s0
	move $t1, $s1
	mul $s0, $t0, $t1
	move $t0, $s1
	li $t1, 1
	add $s1, $t0, $t1
	j Label9
Label10:
	move $v0, $s0
	lw $fp, 4($sp)
	lw $ra, 8($sp)
	lw $s7, 12($sp)
	lw $s6, 16($sp)
	lw $s5, 20($sp)
	lw $s4, 24($sp)
	lw $s3, 28($sp)
	lw $s2, 32($sp)
	lw $s1, 36($sp)
	lw $s0, 40($sp)
	add $sp, $sp, 48
	jr $ra
func_4:
#为函数局部变量和临时变量退栈空间
	sub $sp, $sp, 12
#退栈空间，接着保存s系寄存器和$ra,$fp
	sub $sp, $sp, 40
	sw $s0, 40($sp)
	sw $s1, 36($sp)
	sw $s2, 32($sp)
	sw $s3, 28($sp)
	sw $s4, 24($sp)
	sw $s5, 20($sp)
	sw $s6, 16($sp)
	sw $s7, 12($sp)
	sw $ra, 8($sp)
	sw $fp, 4($sp)
#置$fp为被调用者基地址
	add $fp, $sp, 60
	lw $t0, 0($fp)
	move $s0, $t0
	lw $t0, -4($fp)
	li $t1, 0
	bgt $t0, $t1, Label11
	li $v0, 0
	lw $fp, 4($sp)
	lw $ra, 8($sp)
	lw $s7, 12($sp)
	lw $s6, 16($sp)
	lw $s5, 20($sp)
	lw $s4, 24($sp)
	lw $s3, 28($sp)
	lw $s2, 32($sp)
	lw $s1, 36($sp)
	lw $s0, 40($sp)
	add $sp, $sp, 60
	jr $ra
Label11:
	lw $t0, -4($fp)
	li $t1, 10
	blt $t0, $t1, Label12
	lw $v0, 0($fp)
	lw $fp, 4($sp)
	lw $ra, 8($sp)
	lw $s7, 12($sp)
	lw $s6, 16($sp)
	lw $s5, 20($sp)
	lw $s4, 24($sp)
	lw $s3, 28($sp)
	lw $s2, 32($sp)
	lw $s1, 36($sp)
	lw $s0, 40($sp)
	add $sp, $sp, 60
	jr $ra
Label12:
	li $t0, 12345679
	lw $t1, -4($fp)
	mul $s1, $t0, $t1
	move $t0, $s1
	li $t1, 9
	mul $s2, $t0, $t1
	move $v0, $s2
	lw $fp, 4($sp)
	lw $ra, 8($sp)
	lw $s7, 12($sp)
	lw $s6, 16($sp)
	lw $s5, 20($sp)
	lw $s4, 24($sp)
	lw $s3, 28($sp)
	lw $s2, 32($sp)
	lw $s1, 36($sp)
	lw $s0, 40($sp)
	add $sp, $sp, 60
	jr $ra
main:
#保存帧指针
	move $fp, $sp
#退栈空间
	sub $sp, $sp, 80
	li $t0, 97
	move $s5, $t0
	li $t0, 98
	move $s6, $t0
	li $t0, 99
	sw $t0, Global_1
	la $t0, Global_2
	li $t1, 0
	li $t2, 4
	mul $t1, $t1, $t2
	li $t2, 48
	add $t0, $t0, $t1
	sw $t2, 0($t0)
	la $t0, Global_3
	li $t1, 0
	li $t2, 4
	mul $t1, $t1, $t2
	li $t2, 48
	add $t0, $t0, $t1
	sw $t2, 0($t0)
#读取int
	li $v0, 5
	syscall 
	sw $v0, global_1
#读取int
	li $v0, 5
	syscall 
	move $s0, $v0
#读取char
	li $v0, 12
	syscall 
	move $s4, $v0
	jal func_1
	la $t0, Global_2
	li $t1, 10
	li $t2, 4
	mul $t1, $t1, $t2
	add $t0, $t0, $t1
	lw $t2, 0($t0)
	move $s7, $t2
#打印char
	move $a0, $s7
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	jal func_1
	sw $v0, -32($fp)
#打印char
	lw $a0, -32($fp)
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#打印char
	li $a0, 45
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#打印char
	lw $a0, Global_1
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#打印char
	li $a0, 45
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	move $t0, $s5
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	lw $t0, global_1
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	move $t0, $s6
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal func_2
	sw $v0, -36($fp)
#打印char
	lw $a0, -36($fp)
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	la $t0, Global_3
	li $t1, 0
	li $t2, 4
	mul $t1, $t1, $t2
	add $t0, $t0, $t1
	lw $t2, 0($t0)
	sw $t2, -40($fp)
#打印char
	lw $a0, -40($fp)
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#打印char
	li $a0, 45
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	jal func_3
	sw $v0, -44($fp)
#打印int
	lw $a0, -44($fp)
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#打印char
	li $a0, 45
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	li $t0, 1
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	lw $t0, global_1
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal func_4
	sw $v0, -48($fp)
#打印int
	lw $a0, -48($fp)
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#打印char
	li $a0, 45
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	li $t0, 3
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	li $t0, 65
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	li $t0, 66
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	li $t0, 67
	sw $t0, 0($sp)
	sub $sp, $sp, 4
	jal hanoi
	li $t0, 1
	move $s1, $t0
	li $t0, 0
	move $t1, $s1
	sub $t0, $t0, $t1
	sw $t0, -52($fp)
	move $t0, $s1
	move $t1, $s1
	add $t0, $t0, $t1
	sw $t0, -56($fp)
	move $t0, $s1
	lw $t1, -56($fp)
	mul $t0, $t0, $t1
	sw $t0, -60($fp)
	move $t0, $s0
	li $t1, 1
	sub $t0, $t0, $t1
	sw $t0, -64($fp)
	lw $t0, -60($fp)
	lw $t1, -64($fp)
	mul $t0, $t0, $t1
	sw $t0, -68($fp)
	move $t0, $s1
	move $t1, $s0
	mul $t0, $t0, $t1
	sw $t0, -72($fp)
	lw $t0, -68($fp)
	lw $t1, -72($fp)
	div $t0, $t0, $t1
	sw $t0, -76($fp)
	lw $t0, -52($fp)
	lw $t1, -76($fp)
	add $s2, $t0, $t1
	li $t0, 2
	move $s3, $t0
#打印int
	move $a0, $s2
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
#打印char
	li $a0, 45
	li $v0, 11
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	move $t0, $s4
	li $t1, 97
	bne $t0, $t1, Label14
#打印int
	move $a0, $s1
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	j Label13
Label14:
	move $t0, $s4
	li $t1, 98
	bne $t0, $t1, Label15
	move $t0, $s1
	move $t1, $s3
	add $s1, $t0, $t1
#打印int
	move $a0, $s1
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	j Label13
Label15:
Label13:
	move $t0, $s4
	li $t1, 97
	bne $t0, $t1, Label17
#打印int
	move $a0, $s1
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	j Label16
Label17:
	move $t0, $s4
	li $t1, 98
	bne $t0, $t1, Label18
	move $t0, $s1
	move $t1, $s3
	add $s1, $t0, $t1
#打印int
	move $a0, $s1
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	j Label16
Label18:
#打印int
	move $a0, $s3
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
Label16:
